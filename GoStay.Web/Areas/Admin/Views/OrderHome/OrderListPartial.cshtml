@using DAL.Helpers.PageHelpers;
@using GoStay.Common.Configuration;
@using GoStay.DataAccess.Entities
@using GoStay.DataDto.OrderDto
@using GoStay.Service
@using GoStay.Common
@using goStayCore.CommonCode
@model ViewModel<OrderSearchOutDto>

<link rel="stylesheet" href="~/assets/css/bootstrap.min.css" />

@{
    Layout = null;
    int totalPage = (Model.Data != null && Model.Data.Count > 0 && Model.Data.FirstOrDefault().Total > 0) ? ((Model.Data.FirstOrDefault().Total - 1) / Model.PageSize + 1) : 0;
    int pageNumber = Model.PageIndex;
    int pageSize = Model.PageSize;
    int FromIndex = pageNumber == 1 ? 1 : (pageNumber - 1) * pageSize + 1;
    int totalCount = (Model.Data.Count > 0) ? Model.Data.FirstOrDefault().Total : 0;
    int EndIndex = pageNumber == totalPage ? totalCount : pageNumber * pageSize;
}

<style>
    /*ghi đè class*/
    .overwrite-class {
        display: flex;
        gap: 10px !important;
    }

        .overwrite-class label {
            flex: 1;
        }

        .overwrite-class input {
            flex: 1;
            margin-top: -15px;
        }

    .box-on-stock-options {
    }

    .box-on-stock-options {
    }

    .box-on-stock-option-region {
        padding: 0px 15px;
        margin-top: -15px;
        flex: 1;
        border: 2px solid #DDD;
        transition: box-shadow .3s ease-in;
        font-size: 14px;
        background-color: #fff;
    }

    .select2-container--open {
        z-index: 9999999
    }

    .modal-content {
        margin-left: -65px;
        justify-content: center;
        width: 800px;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        color: black;
        font-weight: bold;
    }

    .select2-container--default .select2-results__option[aria-selected=true] {
        background-color: rebeccapurple;
        color: white;
    }

    .dropdown-showpage a {
        color: #fff !important;
        background: #1ABC9C;
    }

    .pagination button.active {
        background-color: #1ABC9C;
        color: white !important;
    }
    /* thêm màu nền khi người dùng hover vào class không active */
    .pagination button:hover:not(.active) {
        background-color: #1ABC9C !important;
    }
    /* css pagedList pagination*/
    .pagination li {
        margin-left: 2px;
        margin-right: 2px;
    }

        .pagination li button {
            min-width: 35px;
            min-height: 35px;
            display: flex;
            justify-content: center;
            align-items: center;
            border: 1px solid #C3D6C6;
            color: #3f8740;
            border-radius: 5px;
        }

            .pagination li button:hover {
                background-color: #1ABC9C;
                color: #fff;
                transition: ease all .15s;
            }

    .pagination .active button {
        color: #ffffff;
        background-color: #3f8740;
    }

    .pagination .active span {
        color: #fff;
        background: #1ABC9C;
        min-width: 35px;
        min-height: 35px;
        display: flex;
        justify-content: center;
        align-items: center;
        border: 1px solid #C3D6C6;
        border-radius: 5px;
    }

    .order-code > a {
        color: #1ABC9C !important;
    }

</style>

<div class="d-flex flex-sm-row">
    <p style="margin-top:10px;margin-right:10px">Hiển thị </p>
    <div class="dropdown dropdown-showpage">
        <a class="btn dropdown-toggle" role="button" data-toggle="dropdown" aria-expanded="false">
            @pageSize
        </a>

        <ul class="dropdown-menu">
            <li><button class="dropdown-item" onclick="SubmitSearch('25', '1')">25</button></li>
            <li><button class="dropdown-item" onclick="SubmitSearch('50', '1')">50</button></li>
            <li><button class="dropdown-item" onclick="SubmitSearch('100', '1')">100</button></li>
        </ul>
    </div>
    <p style="margin-top:10px;margin-left:10px">   bản ghi</p>

</div>

<div class="table-responsive">

    <table class="table table-bordered table-hover mb-0">
        <thead>
            <tr>
                <th>ID</th>
                <th>UID</th>
                <th>Title</th>
                <th>User Name</th>
                <th>Phương thức thanh toán</th>
                <th>Trạng thái</th>
                <th> Order code </th>
                <th> Ngày tạo</th>
                <th> Tổng giá trị</th>

            </tr>
        </thead>
        <tbody>
            @{
                if (Model.Data == null)
                    return;
                if (Model.Data.Count > 0)
                {
                    int STT = FromIndex;
                    foreach (var item in Model.Data)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.IdUser</td>
                            <td style="white-space:inherit !important">@item.Title</td>
                            <td class="order-code" style="white-space:inherit !important">
                                <a target="_blank" href="" onclick="GetUserInfo(@item.IdUser);" data-toggle="modal" data-target="#InforUser">@item.UserName</a>
                            </td>

                            <td style="width:250px; white-space:inherit !important">@item.PaymentMethod</td>
                            <th> @item.Status</th>
                            <th class="order-code"> <a target="_blank" href="@Url.Action("Order", "Orders",new { Id = @item.Id, Area = "" })">@item.Ordercode </a></th>
                            <td> @item.DateCreate?.AddHours(7)</td>
                            <td> @AppConfigs.FormatCurrency("VND", (decimal)Math.Round(@item.TotalAmount ?? 0))</td>
                        </tr>
                        STT++;
                    }
                }
            }
        </tbody>
    </table>



    <div class="modal fade" id="InforUser" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-body">
                <div class="modal-content" id="ShowUserInfo">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    @if (Model.Data != null && Model.Data.Count > 0 && Model.Data.FirstOrDefault().Total > 0)
    {
        <div class="row y-gap-30">
            <div class="pagintion-table">
                <div class="d-flex align-items-center justify-content-between flex-column flex-sm-row">
                    <p class="mb-3 mb-sm-0">
                        Hiển thị từ
                        <span>@FromIndex</span>
                        đến
                        <span>@EndIndex</span>
                        của @Model.Data.FirstOrDefault().Total bản ghi
                    </p>
                    <nav class="pagination ">
                        <ul class="pagination mb-0">
                            <li class="page-item "><button class="page-link" onclick="SubmitSearch(@Model.PageSize.ToString(), '1')"> Fisrt </button></li>

                            @for (int i = 1; i <= totalPage; i++)
                            {
                                string active = "";
                                if (i == pageNumber) active = "active";
                                if (pageNumber <= 3 && i <= 5)
                                {
                                    <li class="page-item "><button onclick="SubmitSearch(@Model.PageSize.ToString(), @i.ToString())" class="page-link @active"> @i </button></li>

                                }
                                else if (pageNumber > 3 && i >= pageNumber - 2 && i <= pageNumber + 2)
                                {
                                    <li class="page-item "><button onclick="SubmitSearch(@Model.PageSize.ToString(), @i.ToString())" class="page-link @active"> @i </button></li>

                                }

                            }
                            <li class="page-item "><button class="page-link" onclick="SubmitSearch(@Model.PageSize.ToString(), @totalPage.ToString())" tabindex="-1"> Last </button></li>
                        </ul>
                    </nav>

                </div>
            </div>
        </div>
    }
</div>
