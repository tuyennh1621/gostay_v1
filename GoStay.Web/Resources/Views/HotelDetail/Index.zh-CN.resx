<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2 children under 12 years old stay for FREE" xml:space="preserve">
    <value>2 名 12 岁以下儿童免费入住</value>
  </data>
  <data name="Acreage" xml:space="preserve">
    <value>面积</value>
  </data>
  <data name="adult" xml:space="preserve">
    <value>成人</value>
  </data>
  <data name="Adult surcharge will be charged" xml:space="preserve">
    <value>将收取成人附加费</value>
  </data>
  <data name="Advantages of the hotel" xml:space="preserve">
    <value>酒店优势</value>
  </data>
  <data name="Booking" xml:space="preserve">
    <value>预订</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>容量</value>
  </data>
  <data name="Children over 12 years old will be considered as adults" xml:space="preserve">
    <value>12岁以上的儿童将被视为成人</value>
  </data>
  <data name="Children surcharge will be charged" xml:space="preserve">
    <value>将收取儿童附加费</value>
  </data>
  <data name="Cleanup" xml:space="preserve">
    <value>清理</value>
  </data>
  <data name="Famous places" xml:space="preserve">
    <value>风景名胜</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="Hotels" xml:space="preserve">
    <value>酒店</value>
  </data>
  <data name="Including taxes and fees" xml:space="preserve">
    <value>包括税费</value>
  </data>
  <data name="Kind of room" xml:space="preserve">
    <value>房间种类</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>地点</value>
  </data>
  <data name="Maximum" xml:space="preserve">
    <value>最大限度</value>
  </data>
  <data name="Other facilities" xml:space="preserve">
    <value>其他设施</value>
  </data>
  <data name="Out of room" xml:space="preserve">
    <value>离开房间</value>
  </data>
  <data name="picture" xml:space="preserve">
    <value>图片</value>
  </data>
  <data name="Please enter the correct number of guests and age for the correct price" xml:space="preserve">
    <value>请输入正确的客人人数和年龄以获得正确的价格</value>
  </data>
  <data name="Popular places" xml:space="preserve">
    <value>热门地点</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>价格</value>
  </data>
  <data name="Price 1 night" xml:space="preserve">
    <value>价格 1 晚</value>
  </data>
  <data name="Relax room" xml:space="preserve">
    <value>休闲室</value>
  </data>
  <data name="Reviews" xml:space="preserve">
    <value>点评</value>
  </data>
  <data name="Rooms" xml:space="preserve">
    <value>房间</value>
  </data>
  <data name="See more" xml:space="preserve">
    <value>查看更多</value>
  </data>
  <data name="Select rooms" xml:space="preserve">
    <value>选择房间</value>
  </data>
  <data name="Serve" xml:space="preserve">
    <value>服务</value>
  </data>
  <data name="There's only" xml:space="preserve">
    <value>只有</value>
  </data>
  <data name="Utilities" xml:space="preserve">
    <value>公用事业</value>
  </data>
  <data name="View room" xml:space="preserve">
    <value>查看房间</value>
  </data>
  <data name="We may run out of rooms within 2 days" xml:space="preserve">
    <value>我们可能会在 2 天内用完房间</value>
  </data>
</root>