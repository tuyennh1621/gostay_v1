<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add room" xml:space="preserve">
    <value>添加房间</value>
  </data>
  <data name="adult" xml:space="preserve">
    <value>成人</value>
  </data>
  <data name="Allow to add" xml:space="preserve">
    <value>允许添加</value>
  </data>
  <data name="Booking" xml:space="preserve">
    <value>继续预订</value>
  </data>
  <data name="Change Room" xml:space="preserve">
    <value>换房间</value>
  </data>
  <data name="Check in" xml:space="preserve">
    <value>报到</value>
  </data>
  <data name="Check out" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="children" xml:space="preserve">
    <value>孩子们</value>
  </data>
  <data name="Choose a bed type" xml:space="preserve">
    <value>选择床型</value>
  </data>
  <data name="Clever choice! You save" xml:space="preserve">
    <value>聪明的选择！您保存</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Delete room from list" xml:space="preserve">
    <value>从列表中删除房间</value>
  </data>
  <data name="Estimated check-in time" xml:space="preserve">
    <value>预计入住时间</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>从</value>
  </data>
  <data name="I want an extra bed" xml:space="preserve">
    <value>我要加床</value>
  </data>
  <data name="I want the big bed" xml:space="preserve">
    <value>我要大床</value>
  </data>
  <data name="if there's room" xml:space="preserve">
    <value>如果有空间</value>
  </data>
  <data name="Including taxes, fees, VAT" xml:space="preserve">
    <value>包括税金、费用、增值税</value>
  </data>
  <data name="Maximum" xml:space="preserve">
    <value>最大限度</value>
  </data>
  <data name="Maximum capacity of the room" xml:space="preserve">
    <value>房间最大容量</value>
  </data>
  <data name="Maximum guests may incur additional charges" xml:space="preserve">
    <value>最多客人可能会产生额外费用</value>
  </data>
  <data name="Nearest to the sea" xml:space="preserve">
    <value>离海最近</value>
  </data>
  <data name="night" xml:space="preserve">
    <value>夜晚</value>
  </data>
  <data name="Nights" xml:space="preserve">
    <value>夜晚</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>笔记</value>
  </data>
  <data name="optional" xml:space="preserve">
    <value>选修的</value>
  </data>
  <data name="Other facilities" xml:space="preserve">
    <value>其他设施</value>
  </data>
  <data name="Other special requirements" xml:space="preserve">
    <value>其他特殊要求</value>
  </data>
  <data name="Price details" xml:space="preserve">
    <value>价格详情</value>
  </data>
  <data name="Request a VAT invoice" xml:space="preserve">
    <value>索取增值税发票</value>
  </data>
  <data name="Room details" xml:space="preserve">
    <value>客房详情</value>
  </data>
  <data name="Room size" xml:space="preserve">
    <value>房间大小</value>
  </data>
  <data name="Rooms" xml:space="preserve">
    <value>房间</value>
  </data>
  <data name="satisfy" xml:space="preserve">
    <value>满足</value>
  </data>
  <data name="Smoking" xml:space="preserve">
    <value>抽烟</value>
  </data>
  <data name="Special requirements" xml:space="preserve">
    <value>特殊要求</value>
  </data>
  <data name="Standard number of customers" xml:space="preserve">
    <value>标准客户数</value>
  </data>
  <data name="Total payment" xml:space="preserve">
    <value>支付总额</value>
  </data>
  <data name="View room" xml:space="preserve">
    <value>查看房间</value>
  </data>
  <data name="Your requests can only be accommodated depending on the status of the hotel's rooms" xml:space="preserve">
    <value>您的要求只能根据酒店房间的情况来满足</value>
  </data>
</root>