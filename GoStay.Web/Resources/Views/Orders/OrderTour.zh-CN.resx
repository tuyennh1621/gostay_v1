<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adult" xml:space="preserve">
    <value>成人</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>申请</value>
  </data>
  <data name="Arrival point" xml:space="preserve">
    <value>到达点</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>孩子们</value>
  </data>
  <data name="Choose Another Tour" xml:space="preserve">
    <value>选择另一个旅游</value>
  </data>
  <data name="Departure point" xml:space="preserve">
    <value>出发点</value>
  </data>
  <data name="Discount code" xml:space="preserve">
    <value>优惠码</value>
  </data>
  <data name="Estimated departure time (optional)" xml:space="preserve">
    <value>预计出发时间（可选）</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>自由的</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>从</value>
  </data>
  <data name="I want the big bed" xml:space="preserve">
    <value>我要大床</value>
  </data>
  <data name="Including taxes, fees, VAT" xml:space="preserve">
    <value>包括税金、费用、增值税</value>
  </data>
  <data name="Infant" xml:space="preserve">
    <value>婴儿</value>
  </data>
  <data name="Insert code" xml:space="preserve">
    <value>插入代码</value>
  </data>
  <data name="Member Information Filling Form" xml:space="preserve">
    <value>会员资料填写表</value>
  </data>
  <data name="Nearest to the sea" xml:space="preserve">
    <value>离海最近</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>笔记</value>
  </data>
  <data name="On map" xml:space="preserve">
    <value>在地图上查看</value>
  </data>
  <data name="Passenger" xml:space="preserve">
    <value>乘客</value>
  </data>
  <data name="Price for" xml:space="preserve">
    <value>价格为</value>
  </data>
  <data name="Request a VAT invoice" xml:space="preserve">
    <value>索取增值税发票</value>
  </data>
  <data name="Sea view room" xml:space="preserve">
    <value>海景房</value>
  </data>
  <data name="Smoking" xml:space="preserve">
    <value>抽烟</value>
  </data>
  <data name="Special requirements" xml:space="preserve">
    <value>特殊要求</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="Total payment" xml:space="preserve">
    <value>支付总额</value>
  </data>
  <data name="Tour booking" xml:space="preserve">
    <value>旅游预订</value>
  </data>
  <data name="Tour of your choice" xml:space="preserve">
    <value>您选择的游览</value>
  </data>
  <data name="Tour price details" xml:space="preserve">
    <value>旅游价格详情</value>
  </data>
  <data name="Under" xml:space="preserve">
    <value>在下面</value>
  </data>
  <data name="Years old" xml:space="preserve">
    <value>岁</value>
  </data>
  <data name="Your requests are only met depending on the tour situation at different times" xml:space="preserve">
    <value>只根据不同时间的旅游情况满足您的要求</value>
  </data>
</root>