<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adult" xml:space="preserve">
    <value>成人</value>
  </data>
  <data name="Airlines" xml:space="preserve">
    <value>航空公司</value>
  </data>
  <data name="An affordable way to fly, with tasty meal and bigger legroom" xml:space="preserve">
    <value>一种经济实惠的飞行方式，可口的餐点和更大的腿部空间</value>
  </data>
  <data name="Arrival day" xml:space="preserve">
    <value>到达日</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>商业</value>
  </data>
  <data name="Child" xml:space="preserve">
    <value>孩子们</value>
  </data>
  <data name="Delete all filter" xml:space="preserve">
    <value>删除所有过滤器</value>
  </data>
  <data name="Departure day" xml:space="preserve">
    <value>出发日</value>
  </data>
  <data name="Economy" xml:space="preserve">
    <value>经济</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>筛选</value>
  </data>
  <data name="Firstclass" xml:space="preserve">
    <value>头等舱</value>
  </data>
  <data name="Flight ticket" xml:space="preserve">
    <value>飞机票</value>
  </data>
  <data name="Flight way" xml:space="preserve">
    <value>飞行方式</value>
  </data>
  <data name="Fly at the lowest cost, with all your basic needs covered" xml:space="preserve">
    <value>以最低的成本飞行，满足您的所有基本需求</value>
  </data>
  <data name="Fly in style, with exclusive check-in counters and seating." xml:space="preserve">
    <value>乘坐时尚的飞机，享受专属的值机柜台和座位。</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>从</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="Infant" xml:space="preserve">
    <value>婴儿</value>
  </data>
  <data name="Less than 2 years old" xml:space="preserve">
    <value>2岁以下</value>
  </data>
  <data name="passenger" xml:space="preserve">
    <value>乘客</value>
  </data>
  <data name="Passengers &amp; Seat Class" xml:space="preserve">
    <value>乘客和座位等级</value>
  </data>
  <data name="Premium economy" xml:space="preserve">
    <value>豪华经济舱</value>
  </data>
  <data name="Price range" xml:space="preserve">
    <value>价格范围</value>
  </data>
  <data name="See more" xml:space="preserve">
    <value>查看更多</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="Take-off time" xml:space="preserve">
    <value>起飞时间</value>
  </data>
  <data name="The most luxurious class, with personalized five-star services." xml:space="preserve">
    <value>最豪华的舱位，个性化的五星级服务。</value>
  </data>
  <data name="Ticket class" xml:space="preserve">
    <value>机票等级</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>到</value>
  </data>
  <data name="years old" xml:space="preserve">
    <value>岁</value>
  </data>
</root>